<!DOCTYPE html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://kitsunebinode.github.io/news/article-42361.htm" />
    <meta charset="utf-8">
    <title>GUI编程之AWT组件详解</title>
        <meta name="description" content="基本组件    组件名 功能     Button Button   Canvas 用于绘图的画布   Checkbox 复选框组件（也可当做单选框组件使用）   CheckboxGroup 用于将多" />
        <link rel="icon" href="/assets/website/img/kitsunebinode/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="Kitsunebi Node机场节点订阅官网">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://kitsunebinode.github.io/news/article-42361.htm" />
    <meta property="og:site_name" content="Kitsunebi Node机场节点订阅官网" />
    <meta property="og:title" content="GUI编程之AWT组件详解" />
    <meta property="og:image" content="https://kitsunebinode.github.io/uploads/20240907/87ba63da47b4da9e1647fd04947e2c3d.webp" />
        <meta property="og:release_date" content="2025-01-18T07:14:16" />
    <meta property="og:updated_time" content="2025-01-18T07:14:16" />
        <meta property="og:description" content="基本组件    组件名 功能     Button Button   Canvas 用于绘图的画布   Checkbox 复选框组件（也可当做单选框组件使用）   CheckboxGroup 用于将多" />
        
    <!-- mobile responsive meta -->
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">
    <!-- theme meta -->
    <meta name="theme-name" content="godocs" />
    <!-- ** Plugins Needed for the Project ** -->
    <!-- plugins -->
    <link rel="stylesheet" href="/assets/website/js/frontend/kitsunebinode/bootstrap/bootstrap.min.css">
    <link rel="stylesheet" href="/assets/website/js/frontend/kitsunebinode/themify-icons/themify-icons.css">
    <!-- Main Stylesheet -->
    <link href="/assets/website/css/kitsunebinode/style.css" rel="stylesheet">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-K0G227LMQD"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-K0G227LMQD');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
        <header class="sticky-top navigation">
        <div class=container>
            <nav class="navbar navbar-expand-lg navbar-light bg-transparent">
                                <a class="navbar-brand" href="/">
                    <span>Kitsunebi Node</span>
                </a>
                                <button class="navbar-toggler border-0" type="button" data-toggle="collapse" data-target="#navigation">
                    <i class="ti-align-right h4 text-dark"></i></button>
                <div class="collapse navbar-collapse text-center" id=navigation>
                    <ul class="navbar-nav mx-auto align-items-center">
                                                <li class="nav-item"><a class="nav-link" href="/">首页</a></li>
                                                <li class="nav-item"><a class="nav-link" href="/free-nodes/">免费节点</a></li>
                                                <li class="nav-item"><a class="nav-link" href="/paid-subscribe/">推荐机场</a></li>
                                                <li class="nav-item"><a class="nav-link" href="/news/">新闻资讯</a></li>
                                                <li class="nav-item"><a class="nav-link" href="#">关于</a></li>
                        <li class="nav-item"><a class="nav-link" href="#">联系</a></li>
                    </ul>
                </div>
            </nav>
        </div>
    </header>
    <!-- details page -->
    <section class="pt-5">
        <div class="container shadow section-sm rounded">
            <div class="row">
                <div class="col-md-12 pb-5">
                    <a href="/">首页</a> / <a href="/news/">新闻资讯</a> / 正文
                </div>
                <div class="col-md-9">
                    <h1 class="mb-4">GUI编程之AWT组件详解</h1>
                                    <input type="hidden" id="share-website-info" data-name="Clash Meta免费节点订阅站" data-url="https://clash-meta.github.io">
                  				  				  				</h1> <h2 id="基本组件">基本组件</h2> <table> <thead> <tr> <th>组件名</th> <th>功能</th> </tr> </thead> <tbody> <tr> <td>Button</td> <td>Button</td> </tr> <tr> <td>Canvas</td> <td>用于绘图的画布</td> </tr> <tr> <td>Checkbox</td> <td>复选框组件（也可当做单选框组件使用）</td> </tr> <tr> <td>CheckboxGroup</td> <td>用于将多个Checkbox 组件组合成一组， 一组 Checkbox 组件将只有一个可以 被选中 ， 即全部变成单选框组件</td> </tr> <tr> <td>Choice</td> <td>下拉选择框</td> </tr> <tr> <td>Frame</td> <td>窗口 ， 在 GUI 程序里通过该类创建窗口</td> </tr> <tr> <td>Label</td> <td>标签类，用于放置提示性文本</td> </tr> <tr> <td>List</td> <td>JU表框组件，可以添加多项条目</td> </tr> <tr> <td>Panel</td> <td>不能单独存在基本容器类，必须放到其他容器中</td> </tr> <tr> <td>Scrollbar</td> <td>滑动条组件。如果需要用户输入位于某个范围的值 ， 就可以使用滑动条组件 ，比如调 色板中设置 RGB 的三个值所用的滑动条。当创建一个滑动条时，必须指定它的方向、初始值、 滑块的大小、最小值和最大值。</td> </tr> <tr> <td>ScrollPane</td> <td>带水平及垂直滚动条的容器组件</td> </tr> <tr> <td>TextArea</td> <td>多行文本域</td> </tr> <tr> <td>TextField</td> <td>单行文本框</td> </tr> </tbody> </table> <p>这些 AWT 组件的用法比较简单，可以查阅 API 文档来获取它们各自的构方法、成员方法等详细信息。</p> <blockquote> <p>API 文档地址：<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://www.apiref.com/java11-zh/java.desktop/javax/swing/package-summary.html"  target="_blank" rel="nofollow">https://www.apiref.com/java11-zh/java.desktop/javax/swing/package-summary.html</a></p> </blockquote> <p><strong>案例：</strong></p> <p>	实现下图效果：</p> <p><center><br /><img decoding="async" src="https://pic.imgdb.cn/item/624bcb8d239250f7c50e7631.jpg" alt="GUI编程之AWT组件详解"/></center></p> <p><strong>演示代码：</strong></p> <pre><code class="language-java">import javax.swing.*; import java.awt.*;  public class BasicComponentDemo {     Frame frame = new Frame("这里测试基本组件");      //定义一个按钮     Button ok = new Button("确认");      //定义一个复选框组     CheckboxGroup cbg = new CheckboxGroup();     //定义一个单选框，初始处于被选中状态,并添加到cbg组中     Checkbox male = new Checkbox("男", cbg, true);      //定义一个单选框，初始处于未被选中状态,并添加到cbg组中     Checkbox female = new Checkbox("女", cbg, false);      //定义一个复选框，初始处于未被选中状态     Checkbox married = new Checkbox("是否已婚？", false);      //定义一个下拉选择框     Choice colorChooser = new Choice();      //定义一个列表选择框     List colorList = new List(6, true);      //定义一个5行，20列的多行文本域     TextArea ta = new TextArea(5, 20);      //定义一个50列的单行文本域     TextField tf = new TextField(50);      public void init() {         //往下拉选择框中添加内容         colorChooser.add("红色");         colorChooser.add("绿色");         colorChooser.add("蓝色");          //往列表选择框中添加内容         colorList.add("红色");         colorList.add("绿色");         colorList.add("蓝色");          //创建一个装载按钮和文本框的Panel容器         Panel bottom = new Panel();         bottom.add(tf);         bottom.add(ok);          //把bottom添加到Frame的底部         frame.add(bottom,BorderLayout.SOUTH);          //创建一个Panel容器，装载下拉选择框，单选框和复选框         Panel checkPanel = new Panel();         checkPanel.add(colorChooser);         checkPanel.add(male);         checkPanel.add(female);         checkPanel.add(married);          //创建一个垂直排列的Box容器，装载 多行文本域和checkPanel         Box topLeft = Box.createVerticalBox();         topLeft.add(ta);         topLeft.add(checkPanel);          //创建一个水平排列的Box容器，装载topLeft和列表选择框         Box top = Box.createHorizontalBox();         top.add(topLeft);         top.add(colorList);          //将top添加到frame的中间区域         frame.add(top);           //设置frame最佳大小并可见         frame.pack();         frame.setVisible(true);     }      public static void main(String[] args) {          new BasicComponentDemo().init();      } }</code></pre> <h2 id="对话框dialog">对话框Dialog</h2> <h3 id="dialog">Dialog</h3> <p>Dialog 是 Window 类的子类，是 一个容器类，属于特殊组件 。 对话框是可以独立存在的顶级窗口， 因此用法与普通窗口的用法几乎完全一样，但是使用对话框需要注意下面两点：</p> <ul> <li>对话框通常依赖于其他窗口，就是通常需要有一个父窗口；</li> <li>对话框有非模式(non-modal)和模式(modal)两种，当某个模式对话框被打开后，该模式对话框总是位于它的父窗口之上，在模式对话框被关闭之前，父窗口无法获得焦点。</li> </ul> <blockquote> <p>模式窗体：你必须关闭该窗体，才能操作其它窗体；比如说，必须按确定或取消，或者按关闭。<br /> 非模式窗体：不必关闭该窗体，就可转换到其它窗体上进行操作。</p> </blockquote> <table> <thead> <tr> <th>方法名称</th> <th>方法功能</th> </tr> </thead> <tbody> <tr> <td>Dialog(Frame owner, String title, boolean modal)</td> <td>创建一个对话框对象：<br />owner:当前对话框的父窗口<br />title:当前对话框的标题<br />modal：当前对话框是否是模式对话框，true/false</td> </tr> </tbody> </table> <p><strong>案例1：</strong></p> <p>	通过Frame、Button、Dialog实现下图效果:</p> <p><center><img decoding="async" src="https://pic.imgdb.cn/item/624bcd01239250f7c5114d7d.jpg" alt="GUI编程之AWT组件详解"/></center></p> <p><strong>演示代码1：</strong></p> <pre><code class="language-java">import java.awt.event.ActionEvent; import java.awt.event.ActionListener; import java.awt.*;  public class DialogDemo1 {      public static void main(String[] args) {          Frame frame = new Frame("这里测试Dialog");          Dialog d1 = new Dialog(frame, "模式对话框", true);         Dialog d2 = new Dialog(frame, "非模式对话框", false);          Button b1 = new Button("打开模式对话框");         Button b2 = new Button("打开非模式对话框");          //设置对话框的大小和位置         d1.setBounds(20,30,300,400);         d2.setBounds(20,30,300,400);          //给b1和b2绑定监听事件         b1.addActionListener(new ActionListener() {             @Override             public void actionPerformed(ActionEvent e) {                 d1.setVisible(true);             }         });         b2.addActionListener(new ActionListener() {             @Override             public void actionPerformed(ActionEvent e) {                 d2.setVisible(true);             }         });          //把按钮添加到frame中         frame.add(b1);         frame.add(b2,BorderLayout.SOUTH);          //设置frame最佳大小并可见         frame.pack();         frame.setVisible(true);      } }</code></pre> <p>在Dialog对话框中，可以根据需求，自定义内容</p> <p><strong>案例：</strong></p> <p>	点击按钮，弹出一个模式对话框，其内容如下:</p> <p><center><img decoding="async" src="https://pic.imgdb.cn/item/624bd28c239250f7c51d67d5.jpg" alt="GUI编程之AWT组件详解"/></center></p> <p><strong>演示代码：</strong></p> <pre><code class="language-java">import java.awt.event.ActionEvent; import java.awt.event.ActionListener; import javax.swing.Box; import javax.swing.JButton; import java.awt.*;  public class DialogDemo2 {      public static void main(String[] args) {          Frame frame = new Frame("这里测试Dialog");          Dialog d1 = new Dialog(frame, "模式对话框", true);          //往对话框中添加内容         Box vBox = Box.createVerticalBox();          vBox.add(new TextField(15));         vBox.add(new JButton("确认"));         d1.add(vBox);          Button b1 = new Button("打开模式对话框");          //设置对话框的大小和位置         d1.setBounds(20,30,200,100);           //给b1绑定监听事件         b1.addActionListener(new ActionListener() {             @Override             public void actionPerformed(ActionEvent e) {                 d1.setVisible(true);             }         });           //把按钮添加到frame中         frame.add(b1);          //设置frame最佳大小并可见         frame.pack();         frame.setVisible(true);      } }</code></pre> <h3 id="filedialog">FileDialog</h3> <p>Dialog 类还有 一个子类 : FileDialog ，它代表一个文件对话框，用于打开或者保存 文件,需要注意的是FileDialog无法指定模态或者非模态，这是因为 FileDialog 依赖于运行平台的实现，如果运行平台的文件对话框是模态的，那么 FileDialog 也是模态的;否则就是非模态的 。</p> <table> <thead> <tr> <th>方法名称</th> <th>方法功能</th> </tr> </thead> <tbody> <tr> <td>FileDialog(Frame parent, String title, int mode)</td> <td>创建一个文件对话框：<br />parent:指定父窗口<br />title:对话框标题<br />mode:文件对话框类型，如果指定为FileDialog.load，用于打开文件，如果指定为FileDialog.SAVE,用于保存文件</td> </tr> <tr> <td>String getDirectory()</td> <td>获取被打开或保存文件的绝对路径</td> </tr> <tr> <td>String getFile()</td> <td>获取被打开或保存文件的文件名</td> </tr> </tbody> </table> <p><strong>案例2：</strong></p> <p>	使用 Frame、Button和FileDialog完成下图效果：</p> <p><center><img decoding="async" src="https://pic.imgdb.cn/item/624bd20c239250f7c51c5bd7.jpg" alt="GUI编程之AWT组件详解"/></center></p> <p><strong>演示代码2：</strong></p> <pre><code class="language-java">import java.awt.*; import java.awt.event.ActionEvent; import java.awt.event.ActionListener;  public class FileDialogTest {      public static void main(String[] args) {          Frame frame = new Frame("这里测试FileDialog");          FileDialog d1 = new FileDialog(frame, "选择需要加载的文件", FileDialog.LOAD);         FileDialog d2 = new FileDialog(frame, "选择需要保存的文件", FileDialog.SAVE);          Button b1 = new Button("打开文件");         Button b2 = new Button("保存文件");          //给按钮添加事件         b1.addActionListener(new ActionListener() {             public void actionPerformed(ActionEvent e) {                 d1.setVisible(true);                 //打印用户选择的文件路径和名称                 System.out.println("用户选择的文件路径:"+d1.getDirectory());                 System.out.println("用户选择的文件名称:"+d1.getFile());             }         });          System.out.println("-------------------------------");         b2.addActionListener(new ActionListener() {             public void actionPerformed(ActionEvent e) {                 d2.setVisible(true);                 //打印用户选择的文件路径和名称                 System.out.println("用户选择的文件路径:"+d2.getDirectory());                 System.out.println("用户选择的文件名称:"+d2.getFile());             }         });          //添加按钮到frame中          frame.add(b1);         frame.add(b2,BorderLayout.SOUTH);          //设置frame最佳大小并可见         frame.pack();         frame.setVisible(true);     } }</code></pre> <p></p> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-41867.htm">猫粮利润空间大吗（猫粮挣钱吗）</a></p>
                                        <p>下一个：<a href="/news/article-42362.htm">动物医院有哪些功能区域（动物医院有哪些功能区域呢）</a></p>
                                    </div>
                                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/free-nodes/2024-12-16-latest-kitsunebi-node.htm" title="12月16日→20.3M/S|2024年最新免费节点Kitsunebi Node订阅链接地址">12月16日→20.3M/S|2024年最新免费节点Kitsunebi Node订阅链接地址</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-21-free-kitsunebi-node.htm" title="12月21日→22.1M/S|2024年最新免费节点Kitsunebi Node订阅链接地址">12月21日→22.1M/S|2024年最新免费节点Kitsunebi Node订阅链接地址</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-13-node-share-links.htm" title="12月13日→18.1M/S|2024年最新免费节点Kitsunebi Node订阅链接地址">12月13日→18.1M/S|2024年最新免费节点Kitsunebi Node订阅链接地址</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-10-8-node-share-links.htm" title="10月8日→21.9M/S|2024年最新免费节点Kitsunebi Node订阅链接地址">10月8日→21.9M/S|2024年最新免费节点Kitsunebi Node订阅链接地址</a></li>
                        <li class="py-2"><a href="/news/article-26055.htm" title="开个宠物店要投资多少钱（开个宠物店得多少钱）">开个宠物店要投资多少钱（开个宠物店得多少钱）</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-27-today-kitsunebi-node.htm" title="11月27日→18.5M/S|2024年最新免费节点Kitsunebi Node订阅链接地址">11月27日→18.5M/S|2024年最新免费节点Kitsunebi Node订阅链接地址</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-28-kitsunebi-windows.htm" title="11月28日→22M/S|2024年最新免费节点Kitsunebi Node订阅链接地址">11月28日→22M/S|2024年最新免费节点Kitsunebi Node订阅链接地址</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-10-18-today-kitsunebi-node.htm" title="10月18日→19.2M/S|2024年最新免费节点Kitsunebi Node订阅链接地址">10月18日→19.2M/S|2024年最新免费节点Kitsunebi Node订阅链接地址</a></li>
                        <li class="py-2"><a href="/news/article-37919.htm" title="6-10java8中关于接口的新特性">6-10java8中关于接口的新特性</a></li>
                        <li class="py-2"><a href="/news/article-25109.htm" title="领养宠物平台（免费领养宠物猫的平台）">领养宠物平台（免费领养宠物猫的平台）</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">54</span> <a href="/date/2025-01/" title="2025-01 归档">2025-01</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">93</span> <a href="/date/2024-12/" title="2024-12 归档">2024-12</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">34</span> <a href="/date/2024-11/" title="2024-11 归档">2024-11</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">25</span> <a href="/date/2024-10/" title="2024-10 归档">2024-10</a></h4>
            </li>
                    </ul>
    </div>
</div>

                </div>
            </div>
        </div>
    </section>
    <!-- /details page -->
        <footer>
        <div class="container">
            <div class="py-4 text-center">
                <p class="text-light">
                            <p>
                                <a href="/">首页</a> | 
                                <a href="/free-node/">免费节点</a> | 
                                <a href="/news/">新闻资讯</a> |
                                <a href="/about-us.htm">关于我们</a> |
                                <a href="/disclaimer.htm">免责申明</a> |
                                <a href="/privacy.htm">隐私申明</a> |
                                <a href="/sitemap.xml">网站地图</a>
                            </p>
                    <a href="/">Kitsunebi Node机场节点订阅官网</a> 版权所有 Powered by WordPress
                </p>
            </div>
        </div>
    </footer>
    <!-- plugins -->
    <script src="/assets/website/js/frontend/kitsunebinode/jQuery/jquery.min.js"></script>
    <script src="/assets/website/js/frontend/kitsunebinode/bootstrap/bootstrap.min.js"></script>
    <script src="/assets/website/js/frontend/kitsunebinode/masonry/masonry.min.js"></script>
    <script src="/assets/website/js/frontend/kitsunebinode/clipboard/clipboard.min.js"></script>
    <script src="/assets/website/js/frontend/kitsunebinode/match-height/jquery.matchHeight-min.js"></script>
    <!-- Main Script -->
    <script src="/assets/website/js/frontend/kitsunebinode/script.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script><script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>