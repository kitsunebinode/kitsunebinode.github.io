<!DOCTYPE html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://kitsunebinode.github.io/news/article-85128.htm" />
    <meta charset="utf-8">
    <title>Token验证JWT方法</title>
        <meta name="description" content="使用基于 Token 的身份验证方法，在服务端不需要存储用户的登录记录。大概的流程是这样的：   客户端使用用户名跟密码请求登录 服务端收到请求，去验证用户名与密码 验证成功后，服务端会签发一个 To" />
        <link rel="icon" href="/assets/website/img/kitsunebinode/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="Kitsunebi Node机场节点订阅官网">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://kitsunebinode.github.io/news/article-85128.htm" />
    <meta property="og:site_name" content="Kitsunebi Node机场节点订阅官网" />
    <meta property="og:title" content="Token验证JWT方法" />
    <meta property="og:image" content="https://kitsunebinode.github.io/uploads/20240907/d8482214045d80859c0008a0d4493802.webp" />
        <meta property="og:release_date" content="2025-03-31T08:39:32" />
    <meta property="og:updated_time" content="2025-03-31T08:39:32" />
        <meta property="og:description" content="使用基于 Token 的身份验证方法，在服务端不需要存储用户的登录记录。大概的流程是这样的：   客户端使用用户名跟密码请求登录 服务端收到请求，去验证用户名与密码 验证成功后，服务端会签发一个 To" />
        
    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="Token验证JWT方法">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">

    <!-- mobile responsive meta -->
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">
    <!-- theme meta -->
    <meta name="theme-name" content="Kitsunebi Node机场节点订阅官网" />
    <!-- ** Plugins Needed for the Project ** -->
    <!-- plugins -->
    <link rel="stylesheet" href="/assets/website/js/frontend/kitsunebinode/bootstrap/bootstrap.min.css">
    <link rel="stylesheet" href="/assets/website/js/frontend/kitsunebinode/themify-icons/themify-icons.css">
    <!-- Main Stylesheet -->
    <link href="/assets/website/css/kitsunebinode/style.css" rel="stylesheet">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-K0G227LMQD"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-K0G227LMQD');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
        <header class="sticky-top navigation">
        <div class=container>
            <nav class="navbar navbar-expand-lg navbar-light bg-transparent">
                <a class="navbar-brand" href="/">
                                <span>Kitsunebi Node</span>
                                </a>
                <button class="navbar-toggler border-0" type="button" data-toggle="collapse" data-target="#navigation">
                    <i class="ti-align-right h4 text-dark"></i></button>
                <div class="collapse navbar-collapse text-center" id=navigation>
                    <ul class="navbar-nav mx-auto align-items-center">
                                                <li class="nav-item"><a class="nav-link" href="/">首页</a></li>
                                                <li class="nav-item"><a class="nav-link" href="/free-nodes/">免费节点</a></li>
                                                <li class="nav-item"><a class="nav-link" href="/paid-subscribe/">推荐机场</a></li>
                                                <li class="nav-item"><a class="nav-link" href="/client.htm">客户端</a></li>
                                                <li class="nav-item"><a class="nav-link" href="/news/">新闻资讯</a></li>
                                            </ul>
                </div>
            </nav>
        </div>
    </header>
    <!-- details page -->
    <section class="pt-5">
        <div class="container shadow section-sm rounded">
            <div class="row">
                <div class="col-md-12 pb-5">
                    <a href="/">首页</a> / <a href="/news/">新闻资讯</a> / 正文
                </div>
                <div class="col-md-9">
                    <h1 class="mb-4">Token验证JWT方法</h1>
                                    <input type="hidden" id="share-website-info" data-name="Clash Meta免费节点订阅站" data-url="https://clash-meta.github.io">
                  				  				  				<div id="content_views" class="markdown_views prism-atom-one-dark"> <h5><a id="_Token__0" rel="nofollow"></a>使用基于 Token 的身份验证方法，在服务端不需要存储用户的登录记录。大概的流程是这样的：</h5> <blockquote> <ol> <li>客户端使用用户名跟密码请求登录</li> <li>服务端收到请求，去验证用户名与密码</li> <li>验证成功后，服务端会签发一个 Token，再把这个 Token 发送给客户端</li> <li>客户端收到 Token 以后可以把它存储起来，比如放在 Cookie 里或者 Local Storage 里</li> <li>客户端每次向服务端请求资源的时候需要带着服务端签发的 Token</li> <li>服务端收到请求，然后去验证客户端请求里面带着的 Token，如果验证成功，就向客户端返回请求的数据</li> </ol> </blockquote> <h3><a id="JWT_9" rel="nofollow"></a>JWT验证</h3> <blockquote> <p>JWT，读作：<em>jot</em> ，表示：JSON Web Tokens</p> </blockquote> <p>JWT 标准的 Token 有三个部分：</p> <ul> <li>header（头部）</li> <li>payload（数据）</li> <li>signature（签名）</li> </ul> <p>中间用点分隔开，并且都会使用 Base64 编码，所以真正的 Token 看起来像这样：</p> <pre><code class="prism language-json">eyJhbGciOiJIUzI1NiJ9<span class="token punctuation">.</span>eyJpc3MiOiJuaW5naGFvLm5ldCIsImV4cCI6IjE0Mzg5NTU0NDUiLCJuYW1lIjoid2FuZ2hhbyIsImFkbWluIjp0cnVlfQ<span class="token punctuation">.</span>SwyHTEx_RQppr97g4J5lKXtabJecpejuef8AqKYMAJc</code></pre> <h3><a id="Header_25" rel="nofollow"></a>Header</h3> <p>每个 JWT token 里面都有一个 header，也就是头部数据。里面包含了使用的算法，这个 JWT 是不是带签名的或者加密的。主要就是说明一下怎么处理这个 JWT token 。</p> <p>唯一在头部里面要包含的是<em>alg</em> 这个属性，如果是加密的 JWT，这个属性的值就是使用的签名或者解密用的算法。如果是未加密的 JWT，这个属性的值要设置成<em>none</em>。</p> <p>eg:</p> <pre><code class="prism language-json"><span class="token punctuation">{<!-- --></span><span class="token string">"alg"</span><span class="token punctuation">:</span><span class="token string">"HS256"</span><span class="token punctuation">}</span></code></pre> <p>意思是这个 JWT 用的算法是 HS256,在base64url编码之后变成</p> <pre><code class="prism language-json">eyJhbGciOiJIUzI1NiJ9</code></pre> <h3><a id="Payload_45" rel="nofollow"></a>Payload</h3> <p>Payload 里面是 Token 的具体内容，这些内容里面有一些是标准字段，你也可以添加其它需要的内容。</p> <ul> <li>iss：Issuer，发行者</li> <li>sub：Subject，主题</li> <li>aud：Audience，观众</li> <li>exp：Expiration time，过期时间</li> <li>nbf：Not before</li> <li>iat：Issued at，发行时间</li> <li>jti：JWT ID</li> </ul> <p>两个自定义的字段，一个是<em>name</em> ，还有一个是<em>admin</em> 。</p> <pre><code class="prism language-json"><span class="token punctuation">{<!-- --></span><span class="token string">"iss"</span><span class="token punctuation">:</span><span class="token string">"ninghao.net"</span><span class="token punctuation">,</span><span class="token string">"exp"</span><span class="token punctuation">:</span><span class="token string">"1438955445"</span><span class="token punctuation">,</span><span class="token string">"name"</span><span class="token punctuation">:</span><span class="token string">"wanghao"</span><span class="token punctuation">,</span><span class="token string">"admin"</span><span class="token punctuation">:</span><span class="token boolean">true</span><span class="token punctuation">}</span></code></pre> <p>使用 base64url 编码以后就变成了这个样子：</p> <pre><code class="prism language-json">eyJpc3MiOiJuaW5naGFvLm5ldCIsImV4cCI6IjE0Mzg5NTU0NDUiLCJuYW1lIjoid2FuZ2hhbyIsImFkbWluIjp0cnVlfQ</code></pre> <h3><a id="Signature_74" rel="nofollow"></a>Signature</h3> <p>JWT 的最后一部分是 Signature ，这部分内容有三个部分，先是用 Base64 编码的<code>header.payload</code>，再用加密算法加密一下，加密的时候要放进去一个 Secret ，这个相当于是一个密码，这个密码秘密地存储在服务端。</p> <p>组成结构是这样子：</p> <ul> <li>header</li> <li>payload</li> <li>secret</li> </ul> <pre><code class="prism language-json"><span class="token keyword">const</span> encodedString<span class="token operator">=</span><span class="token function">base64UrlEncode</span><span class="token punctuation">(</span>header<span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">"."</span><span class="token operator">+</span><span class="token function">base64UrlEncode</span><span class="token punctuation">(</span>payload<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token constant">HMACSHA256</span><span class="token punctuation">(</span>encodedString<span class="token punctuation">,</span><span class="token string">'secret'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre> <p>处理完成以后看起来像这样：</p> <pre><code class="prism language-json">SwyHTEx_RQppr97g4J5lKXtabJecpejuef8AqKYMAJc</code></pre> <p>最后这个在服务端生成并且要发送给客户端的 Token 看起来像这样：(由以上三部分组成)</p> <pre><code class="prism language-json">eyJhbGciOiJIUzI1NiJ9<span class="token punctuation">.</span>eyJpc3MiOiJuaW5naGFvLm5ldCIsImV4cCI6IjE0Mzg5NTU0NDUiLCJuYW1lIjoid2FuZ2hhbyIsImFkbWluIjp0cnVlfQ<span class="token punctuation">.</span>SwyHTEx_RQppr97g4J5lKXtabJecpejuef8AqKYMAJc</code></pre> <p>客户端收到这个 Token 以后把它存储下来，下回向服务端发送请求的时候就带着这个 Token 。服务端收到这个 Token ，然后进行验证，通过以后就会返回给客户端想要的资源。</p> <h3><a id="_103" rel="nofollow"></a>准备项目</h3> <p>准备一个简单的 Node.js 项目：</p> <pre><code class="prism language-js"><span class="token constant">C</span><span class="token punctuation">:</span>\Users\bnkj<span class="token operator">&gt;</span>cd desktop<span class="token constant">C</span><span class="token punctuation">:</span>\Users\bnkj\Desktop<span class="token operator">&gt;</span>mkdir jwt<span class="token operator">-</span>demo<span class="token constant">C</span><span class="token punctuation">:</span>\Users\bnkj\Desktop<span class="token operator">&gt;</span>cd jwt<span class="token operator">-</span>demo<span class="token constant">C</span><span class="token punctuation">:</span>\Users\bnkj\Desktop\jwt<span class="token operator">-</span>demo<span class="token operator">&gt;</span>npm init<span class="token operator">-</span>y</code></pre> <p>安装签发与验证 JWT 的功能包，我用的叫<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://github.com/auth0/node-jsonwebtoken"  rel="nofollow"><em>jsonwebtoken</em></a>，在项目里安装一下这个包：</p> <pre><code class="prism language-js"><span class="token constant">C</span><span class="token punctuation">:</span>\Users\bnkj\Desktop\jwt<span class="token operator">-</span>demo<span class="token operator">&gt;</span>npm install jsonwebtoken</code></pre> <h3><a id="_JWT_123" rel="nofollow"></a>签发 JWT</h3> <p>在项目里随便添加一个 .js 文件，比如<em>index.js</em>，在文件里添加下面这些代码：</p> <pre><code class="prism language-js"><span class="token keyword">const</span> jwt<span class="token operator">=</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'jsonwebtoken'</span><span class="token punctuation">)</span><span class="token comment">// Token 数据</span><span class="token keyword">const</span> payload<span class="token operator">=</span><span class="token punctuation">{<!-- --></span>   name<span class="token punctuation">:</span><span class="token string">'wanghao'</span><span class="token punctuation">,</span>   admin<span class="token punctuation">:</span><span class="token boolean">true</span><span class="token punctuation">}</span><span class="token comment">// 密钥</span><span class="token keyword">const</span> secret<span class="token operator">=</span><span class="token string">'ILOVENINGHAO'</span><span class="token comment">// 签发 Token</span><span class="token keyword">const</span> token<span class="token operator">=</span> jwt<span class="token punctuation">.</span><span class="token function">sign</span><span class="token punctuation">(</span>payload<span class="token punctuation">,</span> secret<span class="token punctuation">,</span><span class="token punctuation">{<!-- --></span> expiresIn<span class="token punctuation">:</span><span class="token string">'1day'</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token comment">// 输出签发的 Token</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>token<span class="token punctuation">)</span></code></pre> <p>非常简单，就是用了刚刚为项目安装的<code>jsonwebtoken</code> 里面提供的<code>jwt.sign</code> 功能，去签发一个 token。这个<code>sign</code>方法需要三个参数：</p> <ol> <li><em>playload</em>：签发的 token 里面要包含的一些数据。</li> <li><em>secret</em>：签发 token 用的密钥，在验证 token 的时候同样需要用到这个密钥。</li> <li><em>options</em>：一些其它的选项。</li> </ol> <p>在命令行下面，用<em>node</em> 命令，执行一下项目里的<em>index.js</em> 这个文件（<em>node index.js</em>），会输出应用签发的<em>token</em>：</p> <pre><code class="prism language-js"><span class="token constant">C</span><span class="token punctuation">:</span>\Users\bnkj\Desktop\jwt<span class="token operator">-</span>demo<span class="token operator">&gt;</span>node index<span class="token punctuation">.</span>js</code></pre> <pre><code class="prism language-json">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9<span class="token punctuation">.</span>eyJuYW1lIjoid2FuZ2hhbyIsImFkbWluIjp0cnVlLCJpYXQiOjE1MjkwMzM5MDYsImV4cCI6MTUyOTEyMDMwNn0<span class="token punctuation">.</span>DctA2QlUCrM6wLWkIO78wBVN0NLpjoIq4T5B_2WJ<span class="token operator">-</span><span class="token constant">PU</span></code></pre> <p>上面的 Token 内容并没有加密，所以如果用一些 JWT 解码功能，可以看到 Token 里面包含的内容，内容由三个部分组成，像这样：</p> <pre><code class="prism language-json"><span class="token comment">// header</span><span class="token punctuation">{<!-- --></span><span class="token string">"alg"</span><span class="token punctuation">:</span><span class="token string">"HS256"</span><span class="token punctuation">,</span><span class="token string">"typ"</span><span class="token punctuation">:</span><span class="token string">"JWT"</span><span class="token punctuation">}</span><span class="token comment">// payload</span><span class="token punctuation">{<!-- --></span><span class="token string">"admin"</span><span class="token punctuation">:</span><span class="token boolean">true</span><span class="token punctuation">,</span><span class="token string">"iat"</span><span class="token punctuation">:</span><span class="token number">1529033906</span><span class="token punctuation">,</span><span class="token string">"name"</span><span class="token punctuation">:</span><span class="token string">"wanghao"</span><span class="token punctuation">,</span><span class="token string">"exp"</span><span class="token punctuation">:</span><span class="token number">1529120306</span><span class="token punctuation">}</span><span class="token comment">// signature</span> DctA2QlUCrM6wLWkIO78wBVN0NLpjoIq4T5B_2WJ<span class="token operator">-</span><span class="token constant">PU</span></code></pre> <h3><a id="_JWT_183" rel="nofollow"></a>验证 JWT</h3> <p>打开项目的 index.js 文件，里面添加几行代码，变成下面的样子：</p> <pre><code class="prism language-js"><span class="token keyword">const</span> jwt<span class="token operator">=</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'jsonwebtoken'</span><span class="token punctuation">)</span><span class="token comment">// Token 数据</span><span class="token keyword">const</span> payload<span class="token operator">=</span><span class="token punctuation">{<!-- --></span>   name<span class="token punctuation">:</span><span class="token string">'wanghao'</span><span class="token punctuation">,</span>   admin<span class="token punctuation">:</span><span class="token boolean">true</span><span class="token punctuation">}</span><span class="token comment">// 密钥</span><span class="token keyword">const</span> secret<span class="token operator">=</span><span class="token string">'ILOVENINGHAO'</span><span class="token comment">// 签发 Token</span><span class="token keyword">const</span> token<span class="token operator">=</span> jwt<span class="token punctuation">.</span><span class="token function">sign</span><span class="token punctuation">(</span>payload<span class="token punctuation">,</span> secret<span class="token punctuation">,</span><span class="token punctuation">{<!-- --></span> expiresIn<span class="token punctuation">:</span><span class="token string">'1day'</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token comment">// 输出签发的 Token</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>token<span class="token punctuation">)</span><span class="token comment">// 验证 Token</span> jwt<span class="token punctuation">.</span><span class="token function">verify</span><span class="token punctuation">(</span>token<span class="token punctuation">,</span> secret<span class="token punctuation">,</span><span class="token punctuation">(</span>error<span class="token punctuation">,</span> decoded<span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{<!-- --></span><span class="token keyword">if</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>       console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>error<span class="token punctuation">.</span>message<span class="token punctuation">)</span><span class="token keyword">return</span><span class="token punctuation">}</span>     console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>decoded<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span></code></pre> <p><code>把要验证的 Token 数据，还有签发这个 Token 的时候用的那个密钥告诉 *verify* 这个方法，在一个回调里面有两个参数，*error* 表示错误，*decoded* 是解码之后的 Token 数据。</code></p> <p>执行：</p> <pre><code class="prism language-js"><span class="token constant">C</span><span class="token punctuation">:</span>\Users\bnkj\Desktop\jwt<span class="token operator">-</span>demo<span class="token operator">&gt;</span>node index<span class="token punctuation">.</span>js</code></pre> <p>输出：</p> <pre><code class="prism language-json">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9<span class="token punctuation">.</span>eyJuYW1lIjoid2FuZ2hhbyIsImFkbWluIjp0cnVlLCJpYXQiOjE1MjkwMzQ3MzMsImV4cCI6MTUyOTEyMTEzM30<span class="token punctuation">.</span>swXojmu7VimFu3BoIgAxxpmm2J05dvD0HT3yu10vuqU<span class="token punctuation">{<!-- --></span> name<span class="token punctuation">:</span><span class="token string">'wanghao'</span><span class="token punctuation">,</span> admin<span class="token punctuation">:</span><span class="token boolean">true</span><span class="token punctuation">,</span> iat<span class="token punctuation">:</span><span class="token number">1529035386</span><span class="token punctuation">,</span> exp<span class="token punctuation">:</span><span class="token number">1529121786</span><span class="token punctuation">}</span></code></pre> <p>若输出：</p> <pre><code class="prism language-js">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9<span class="token punctuation">.</span>eyJuYW1lIjoid2FuZ2hhbyIsImFkbWluIjp0cnVlLCJpYXQiOjE1MjkwMzQ3MzMsImV4cCI6MTUyOTEyMTEzM30<span class="token punctuation">.</span>swXojmu7VimFu3BoIgAxxpmm2J05dvD0HT3yu10vuqU  invalid signature</code></pre> <p>则表示签名不对，即<em>verify</em> 这个方法的参数是错误的。</p> <h3><a id="_244" rel="nofollow"></a>使用方法</h3> <h4><a id="1_node_246" rel="nofollow"></a>1 新建一个node项目，并为其安装环境</h4> <pre><code class="prism language-js"><span class="token constant">C</span><span class="token punctuation">:</span>\Users\bnkj<span class="token operator">&gt;</span>cd desktop<span class="token constant">C</span><span class="token punctuation">:</span>\Users\bnkj\Desktop<span class="token operator">&gt;</span>mkdir jwt<span class="token operator">-</span>demo<span class="token constant">C</span><span class="token punctuation">:</span>\Users\bnkj\Desktop<span class="token operator">&gt;</span>cd jwt<span class="token operator">-</span>demo<span class="token constant">C</span><span class="token punctuation">:</span>\Users\bnkj\Desktop\jwt<span class="token operator">-</span>demo<span class="token operator">&gt;</span>npm init<span class="token operator">-</span>y</code></pre> <p>执行结果：</p> <pre><code class="prism language-js">Wrote to<span class="token constant">C</span><span class="token punctuation">:</span>\Users\bnkj\Desktop\jwt<span class="token operator">-</span>demo\<span class="token keyword">package</span><span class="token punctuation">.</span>json<span class="token punctuation">:</span><span class="token punctuation">{<!-- --></span><span class="token string">"name"</span><span class="token punctuation">:</span><span class="token string">"jwt-demo"</span><span class="token punctuation">,</span><span class="token string">"version"</span><span class="token punctuation">:</span><span class="token string">"1.0.0"</span><span class="token punctuation">,</span><span class="token string">"description"</span><span class="token punctuation">:</span><span class="token string">""</span><span class="token punctuation">,</span><span class="token string">"main"</span><span class="token punctuation">:</span><span class="token string">"index.js"</span><span class="token punctuation">,</span><span class="token string">"scripts"</span><span class="token punctuation">:</span><span class="token punctuation">{<!-- --></span><span class="token string">"test"</span><span class="token punctuation">:</span><span class="token string">"echo \"Error: no test specified\" &amp;&amp; exit 1"</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token string">"keywords"</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string">"author"</span><span class="token punctuation">:</span><span class="token string">""</span><span class="token punctuation">,</span><span class="token string">"license"</span><span class="token punctuation">:</span><span class="token string">"ISC"</span><span class="token punctuation">}</span></code></pre> <h4><a id="2_jsonwebtoken_277" rel="nofollow"></a>2 为项目安装<code>jsonwebtoken</code>环境</h4> <pre><code class="prism language-js"><span class="token constant">C</span><span class="token punctuation">:</span>\Users\bnkj\Desktop\jwt<span class="token operator">-</span>demo<span class="token operator">&gt;</span>npm install jsonwebtoken</code></pre> <p>结果：</p> <pre><code>npm notice created a lockfile as package-lock.json. You should commit this file. npm WARN jwt-demo@1.0.0 No description npm WARN jwt-demo@1.0.0 No repository field.  + jsonwebtoken@8.5.1 added 15 packages from 10 contributors in 1.194s  1 package is looking for funding   run `npm fund` for details</code></pre> <h4><a id="3__js___297" rel="nofollow"></a>3 新建一个 js 文件 ，并在其中添加基础的框架代码</h4> <pre><code class="prism language-js"><span class="token keyword">const</span> jwt<span class="token operator">=</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'jsonwebtoken'</span><span class="token punctuation">)</span><span class="token comment">// Token 数据</span><span class="token keyword">const</span> payload<span class="token operator">=</span><span class="token punctuation">{<!-- --></span>   name<span class="token punctuation">:</span><span class="token string">'wanghao'</span><span class="token punctuation">,</span>   admin<span class="token punctuation">:</span><span class="token boolean">true</span><span class="token punctuation">}</span><span class="token comment">// 密钥</span><span class="token keyword">const</span> secret<span class="token operator">=</span><span class="token string">'ILOVENINGHAO'</span><span class="token comment">// 签发 Token</span><span class="token keyword">const</span> token<span class="token operator">=</span> jwt<span class="token punctuation">.</span><span class="token function">sign</span><span class="token punctuation">(</span>payload<span class="token punctuation">,</span> secret<span class="token punctuation">,</span><span class="token punctuation">{<!-- --></span> expiresIn<span class="token punctuation">:</span><span class="token string">'1day'</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token comment">// 输出签发的 Token</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>token<span class="token punctuation">)</span><span class="token comment">// 验证 Token</span> jwt<span class="token punctuation">.</span><span class="token function">verify</span><span class="token punctuation">(</span>token<span class="token punctuation">,</span> secret<span class="token punctuation">,</span><span class="token punctuation">(</span>error<span class="token punctuation">,</span> decoded<span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{<!-- --></span><span class="token keyword">if</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>       console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>error<span class="token punctuation">.</span>message<span class="token punctuation">)</span><span class="token keyword">return</span><span class="token punctuation">}</span>     console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>decoded<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span></code></pre> <blockquote> <p>注意两个函数：</p> <p><code>sign</code>：需要三个参数，分别是payload，secret ， 和<em>options</em> ，表示一些其他选项</p> <p><code>verify</code>：需要三个参数，分别是携带信息的token ，密钥 secret ， 和一个回调的方法，这个方法需要由两个参数，分别是 error ，返回错误信息，另一个是decoded ， 返回该token解码的结果</p> </blockquote> <h4><a id="4_Token_334" rel="nofollow"></a>4 在命令窗口下验证该Token</h4> <pre><code class="prism language-js"><span class="token constant">C</span><span class="token punctuation">:</span>\Users\bnkj\Desktop\jwt<span class="token operator">-</span>demo<span class="token operator">&gt;</span>node index<span class="token punctuation">.</span>js</code></pre> <p>结果：</p> <pre><code class="prism language-json">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9<span class="token punctuation">.</span>eyJuYW1lIjoid2FuZ2hhbyIsImFkbWluIjp0cnVlLCJpYXQiOjE2MDg0Njk5OTQsImV4cCI6MTYwODU1NjM5NH0<span class="token punctuation">.</span><span class="token number">7</span>Mi8WrHAv0fWZnLV6DlkPqK_ExQ4f09Zrs8eiVzXRQs<span class="token punctuation">{<!-- --></span> name<span class="token punctuation">:</span><span class="token string">'wanghao'</span><span class="token punctuation">,</span> admin<span class="token punctuation">:</span><span class="token boolean">true</span><span class="token punctuation">,</span> iat<span class="token punctuation">:</span><span class="token number">1608469994</span><span class="token punctuation">,</span> exp<span class="token punctuation">:</span><span class="token number">1608556394</span><span class="token punctuation">}</span></code></pre> <h3><a id="_352" rel="nofollow"></a>在项目中的使用方法</h3> <blockquote> <p>空 ，后续更新</p> </blockquote> </div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-84420.htm">济南宠物领养中心有哪些地方 济南宠物领养中心有哪些地方好</a></p>
                                        <p>下一个：<a href="/news/article-85129.htm">狗粮加工设备及配方赚钱吗（狗粮加工厂需要投资多少钱）</a></p>
                                    </div>
                                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/news/article-71416.htm" title="流浪动物领养网站（流浪动物领养网站推荐）">流浪动物领养网站（流浪动物领养网站推荐）</a></li>
                        <li class="py-2"><a href="/news/article-66275.htm" title="动物疫苗打到人身上有事吗会传染吗（动物疫苗打到人身上有事吗会传染吗图片）">动物疫苗打到人身上有事吗会传染吗（动物疫苗打到人身上有事吗会传染吗图片）</a></li>
                        <li class="py-2"><a href="/news/article-84420.htm" title="济南宠物领养中心有哪些地方 济南宠物领养中心有哪些地方好">济南宠物领养中心有哪些地方 济南宠物领养中心有哪些地方好</a></li>
                        <li class="py-2"><a href="/news/article-83701.htm" title="java使用es中三种查询用法from size、search after、scroll">java使用es中三种查询用法from size、search after、scroll</a></li>
                        <li class="py-2"><a href="/news/article-82989.htm" title="人打动物疫苗有用吗 人打动物疫苗有用吗现在">人打动物疫苗有用吗 人打动物疫苗有用吗现在</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-31-kitsunebi-node-share.htm" title="3月31日→18.1M/S|2025年最新免费节点Kitsunebi Node订阅链接地址">3月31日→18.1M/S|2025年最新免费节点Kitsunebi Node订阅链接地址</a></li>
                        <li class="py-2"><a href="/news/article-68809.htm" title="宠物产品品牌调查（宠物产品市场调研报告）">宠物产品品牌调查（宠物产品市场调研报告）</a></li>
                        <li class="py-2"><a href="/news/article-80201.htm" title="一只身价13亿的猫（世界上最贵的猫）">一只身价13亿的猫（世界上最贵的猫）</a></li>
                        <li class="py-2"><a href="/news/article-79497.htm" title="宠物粮食店名称大全四个字怎么取（宠物粮创意名字）">宠物粮食店名称大全四个字怎么取（宠物粮创意名字）</a></li>
                        <li class="py-2"><a href="/news/article-67532.htm" title="宠物粮食的品牌形象有哪些（宠物粮品牌名称）">宠物粮食的品牌形象有哪些（宠物粮品牌名称）</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">3</span> <a href="/date/2025-04/" title="2025-04 归档">2025-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">89</span> <a href="/date/2025-03/" title="2025-03 归档">2025-03</a></h4>
            </li>
                    </ul>
    </div>
</div>

                </div>
            </div>
        </div>
    </section>
    <!-- /details page -->
        <footer>
        <div class="container">
            <div class="py-4 text-center">
                <p class="text-light">
                            <p>
                                <a href="/">首页</a> | 
                                <a href="/free-node/">免费节点</a> | 
                                <a href="/news/">新闻资讯</a> |
                                <a href="/about-us.htm">关于我们</a> |
                                <a href="/disclaimer.htm">免责申明</a> |
                                <a href="/privacy.htm">隐私申明</a> |
                                <a href="/sitemap.xml">网站地图</a>
                            </p>
                    <a href="/">Kitsunebi Node机场节点订阅官网</a> 版权所有 Powered by WordPress
                </p>
            </div>
        </div>
    </footer>
    <!-- plugins -->
    <script src="/assets/website/js/frontend/kitsunebinode/jQuery/jquery.min.js"></script>
    <script src="/assets/website/js/frontend/kitsunebinode/bootstrap/bootstrap.min.js"></script>
    <script src="/assets/website/js/frontend/kitsunebinode/masonry/masonry.min.js"></script>
    <script src="/assets/website/js/frontend/kitsunebinode/clipboard/clipboard.min.js"></script>
    <script src="/assets/website/js/frontend/kitsunebinode/match-height/jquery.matchHeight-min.js"></script>
    <!-- Main Script -->
    <script src="/assets/website/js/frontend/kitsunebinode/script.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script><script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>