<!DOCTYPE html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://kitsunebinode.github.io/news/article-26506.htm" />
    <meta charset="utf-8">
    <title>maven生成war包的两种方式</title>
        <meta name="description" content="&nbsp;&nbsp;&nbsp; war包即对WEB应用程序进行打包，用于应用容器的部署。如在jboss中只要把war包丢入deploy目录下即可发布自己的应用了。打包方式有很多中，很多工具本身就" />
        <link rel="icon" href="/assets/website/img/kitsunebinode/favicon.ico" type="image/x-icon"/>
    <!-- mobile responsive meta -->
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">
    <!-- theme meta -->
    <meta name="theme-name" content="godocs" />
    <!-- ** Plugins Needed for the Project ** -->
    <!-- plugins -->
    <link rel="stylesheet" href="/assets/website/js/frontend/kitsunebinode/bootstrap/bootstrap.min.css">
    <link rel="stylesheet" href="/assets/website/js/frontend/kitsunebinode/themify-icons/themify-icons.css">
    <!-- Main Stylesheet -->
    <link href="/assets/website/css/kitsunebinode/style.css" rel="stylesheet">
    
<!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-K0G227LMQD"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-K0G227LMQD');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
        <header class="sticky-top navigation">
        <div class=container>
            <nav class="navbar navbar-expand-lg navbar-light bg-transparent">
                                <a class="navbar-brand" href="/">
                    <span>Kitsunebi Node</span>
                </a>
                                <button class="navbar-toggler border-0" type="button" data-toggle="collapse" data-target="#navigation">
                    <i class="ti-align-right h4 text-dark"></i></button>
                <div class="collapse navbar-collapse text-center" id=navigation>
                    <ul class="navbar-nav mx-auto align-items-center">
                                                <li class="nav-item"><a class="nav-link" href="/">首页</a></li>
                                                <li class="nav-item"><a class="nav-link" href="/free-nodes/">免费节点</a></li>
                                                <li class="nav-item"><a class="nav-link" href="/paid-subscribe/">推荐机场</a></li>
                                                <li class="nav-item"><a class="nav-link" href="/news/">新闻资讯</a></li>
                                                <li class="nav-item"><a class="nav-link" href="#">关于</a></li>
                        <li class="nav-item"><a class="nav-link" href="#">联系</a></li>
                    </ul>
                </div>
            </nav>
        </div>
    </header>
    <!-- details page -->
    <section class="pt-5">
        <div class="container shadow section-sm rounded">
            <div class="row">
                <div class="col-md-12 pb-5">
                    <a href="/">首页</a> / <a href="/news/">新闻资讯</a> / 正文
                </div>
                <div class="col-md-9">
                    <h1 class="mb-4">maven生成war包的两种方式</h1>
                                      				  				  				<div id="content_views" class="htmledit_views"> <p>&nbsp;&nbsp;&nbsp; war包即对WEB应用程序进行打包，用于应用容器的部署。如在jboss中只要把war包丢入deploy目录下即可发布自己的应用了。打包方式有很多中，很多工具本身就支持此功能。下面主要介绍通过maven来操作的两种方式：</p> <p><strong>方法一：</strong></p> <p>&nbsp;&nbsp; 即第一反应的那种啦，就是利用maven的maven-war-plugin。</p> <pre class="xml">&lt;build&gt;    &lt;plugins&gt;    ......     &lt;plugin&gt;        &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;        &lt;artifactId&gt;maven-war-plugin&lt;/artifactId&gt;        &lt;version&gt;2.0.2&lt;/version&gt;        &lt;configuration&gt;           &lt;warSourceExcludes&gt;WEB-INF/lib/log4j-${log4j.version}.jar&lt;/warSourceExcludes&gt;        &lt;/configuration&gt;     &lt;/plugin&gt;    &lt;/plugins&gt;  &lt;/build&gt;</pre> <p>当然你可以指定war包的名称，输出的目录，webapp目录等等。</p> <p>可以在需要打包的工程中直接设定：&lt;pom&gt;war&lt;/pom&gt;</p> <p>这样在install的时候就会对此工程生成相应配置的war包，原来此web工程依赖的其他工程全部会以jar包的形式出现在lib目录下，所以不需要再去关心war包中集成的jar包是否完整，maven已经帮你做完了。</p> <p>顺便提一句，在jboss中发布war包，如果包中包含log4j.jar，会报错，所以在本例中将此jar包排除在外。</p> <p><strong>方法二：</strong></p> <p>不用war插件，而是用到另外三个插件：maven-dependency-plugin 、maven-antrun-plugin&nbsp;、 build-helper-maven-plugin</p> <p>下面分别说明下着三个插件在此过程扮演的角色：</p> <p>maven-dependency-plugin ：相当于数据收集器，该依赖那些jar包，该加载那些resource信息。</p> <p>maven-antrun-plugin：完成收集完文件夹的压缩和包的重命名。</p> <p>build-helper-maven-plugin：让压缩包拥有男人本色，oh sorry 是war本色。</p> <p>在写pom.xml配置前，先说明下目录结构</p> <p>root</p> <p>|</p> <p>|---template</p> <p>|</p> <p>|---wardir</p> <p>其中这两个目录都作为maven的独立工程，下面要写配置在wardir下的pom.xml中</p> <pre class="xml">&lt;build&gt;    &lt;plugins&gt;       &lt;plugin&gt;         &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;         &lt;artifactId&gt;maven-dependency-plugin&lt;/artifactId&gt;         &lt;version&gt;2.0&lt;/version&gt;         &lt;executions&gt;            &lt;execution&gt;               &lt;id&gt;create-structure&lt;/id&gt;               &lt;phase&gt;process-resources&lt;/phase&gt;                &lt;goals&gt;                    &lt;goal&gt;unpack&lt;/goal&gt;                 &lt;/goals&gt;                 &lt;configuration&gt;                     &lt;artifactItems&gt;                        &lt;artifactItem&gt;                           &lt;groupId&gt;GROUPID&lt;/groupId&gt;                            &lt;artifactId&gt;template&lt;/artifactId&gt;                        &lt;/artifactItem&gt;                  &lt;/artifactItems&gt;                  &lt;outputDirectory&gt;                      ${project.build.directory}/${assembly.name}.war                   &lt;/outputDirectory&gt;                 &lt;/configuration&gt;              &lt;/execution&gt;              &lt;execution&gt;                  &lt;id&gt;copy-libs&lt;/id&gt;                   &lt;phase&gt;process-resources&lt;/phase&gt;                    &lt;goals&gt;                       &lt;goal&gt;copy&lt;/goal&gt;                    &lt;/goals&gt;                    &lt;configuration&gt;                       &lt;artifactItems&gt;                          &lt;artifactItem&gt;                              &lt;groupId&gt;jdom&lt;/groupId&gt;                               &lt;artifactId&gt;jdom&lt;/artifactId&gt;                           &lt;/artifactItem&gt;                                 ......                        &lt;/artifactItems&gt;                          &lt;outputDirectory&gt;${project.build.directory}/${assembly.name}.war/WEB-INF/lib&lt;/outputDirectory&gt;                     &lt;/configuration&gt;                  &lt;/execution&gt;             &lt;/executions&gt;        &lt;/plugin&gt;         &lt;plugin&gt;             &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;             &lt;artifactId&gt;maven-antrun-plugin&lt;/artifactId&gt;             &lt;version&gt;1.3&lt;/version&gt;             &lt;executions&gt;                &lt;execution&gt;                   &lt;id&gt;copy-config&lt;/id&gt;                   &lt;phase&gt;process-resources&lt;/phase&gt;                   &lt;goals&gt;                       &lt;goal&gt;run&lt;/goal&gt;                    &lt;/goals&gt;                    &lt;configuration&gt;                    &lt;tasks&gt;                        &lt;copy todir="${project.build.directory}/${assembly.name}.war"&gt;                            &lt;fileset dir="src/main/resources" /&gt;                        &lt;/copy&gt;                        &lt;zip destfile="${project.build.directory}/${assembly.name}-${project.version}-war.zip"&gt;                             &lt;zipfileset dir="${project.build.directory}/${assembly.name}.war" includes="**\*.*"  excludes="*.zip" /&gt;                        &lt;/zip&gt;                        &lt;copy file="${project.build.directory}/${assembly.name}-${project.version}-war.zip"                                     tofile="${project.build.directory}/${assembly.name}-${project.version}.war" /&gt;                      &lt;/tasks&gt;                      &lt;/configuration&gt;                 &lt;/execution&gt;             &lt;/executions&gt;        &lt;/plugin&gt;        &lt;plugin&gt;            &lt;groupId&gt;org.codehaus.mojo&lt;/groupId&gt;            &lt;artifactId&gt;build-helper-maven-plugin&lt;/artifactId&gt;            &lt;version&gt;1.4&lt;/version&gt;            &lt;executions&gt;               &lt;execution&gt;               &lt;id&gt;attach-artifacts&lt;/id&gt;               &lt;phase&gt;package&lt;/phase&gt;                  &lt;goals&gt;                      &lt;goal&gt;attach-artifact&lt;/goal&gt;                  &lt;/goals&gt;                  &lt;configuration&gt;                       &lt;artifacts&gt;                          &lt;artifact&gt;                              &lt;file&gt;${project.build.directory}/${assembly.name}-${project.version}.war&lt;/file&gt;                               &lt;type&gt;war&lt;/type&gt;                           &lt;/artifact&gt;                        &lt;/artifacts&gt;                   &lt;/configuration&gt;                &lt;/execution&gt;             &lt;/executions&gt;          &lt;/plugin&gt;     &lt;/plugins&gt; &lt;/build&gt;</pre> <p>&nbsp;当然这种方式也可以用来打ear包。对于打无页面操作系统的war包，个人认为用后者更灵活，当然建立假web工程，再依赖工程，通过第一种方式同样可以达到最终的结果。看个人喜好了。</p> <p>结束语：maven真的很强大！</p> </div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-26057.htm">猫死后最好的处理方式（猫死了预示家里什么情况）</a></p>
                                        <p>下一个：<a href="/news/article-26507.htm">C语言 推理证明带环链表详细过程_C 语言</a></p>
                                    </div>
                                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/free-nodes/2024-9-20-latest-kitsunebi-node.htm" title="9月20日→20M/S|2024年最新免费节点Kitsunebi Node订阅链接地址">9月20日→20M/S|2024年最新免费节点Kitsunebi Node订阅链接地址</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-16-kitsunebi-node-github.htm" title="11月16日→20.3M/S|2024年最新免费节点Kitsunebi Node订阅链接地址">11月16日→20.3M/S|2024年最新免费节点Kitsunebi Node订阅链接地址</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-10-5-free-high-speed-nodes.htm" title="10月5日→20.9M/S|2024年最新免费节点Kitsunebi Node订阅链接地址">10月5日→20.9M/S|2024年最新免费节点Kitsunebi Node订阅链接地址</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-10-17-free-high-speed-nodes.htm" title="10月17日→19.8M/S|2024年最新免费节点Kitsunebi Node订阅链接地址">10月17日→19.8M/S|2024年最新免费节点Kitsunebi Node订阅链接地址</a></li>
                        <li class="py-2"><a href="/news/article-26057.htm" title="猫死后最好的处理方式（猫死了预示家里什么情况）">猫死后最好的处理方式（猫死了预示家里什么情况）</a></li>
                        <li class="py-2"><a href="/news/article-20045.htm" title="狗狗领养平台有哪些软件（狗狗领养免费平台）">狗狗领养平台有哪些软件（狗狗领养免费平台）</a></li>
                        <li class="py-2"><a href="/news/article-22797.htm" title="动物诊疗许可证多久能申请下来啊（动物诊疗许可证多久能申请下来啊知乎）">动物诊疗许可证多久能申请下来啊（动物诊疗许可证多久能申请下来啊知乎）</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-7-kitsunebi-node.htm" title="12月7日→18.6M/S|2024年最新免费节点Kitsunebi Node订阅链接地址">12月7日→18.6M/S|2024年最新免费节点Kitsunebi Node订阅链接地址</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-12-free-node-subscribe.htm" title="12月12日→18.2M/S|2024年最新免费节点Kitsunebi Node订阅链接地址">12月12日→18.2M/S|2024年最新免费节点Kitsunebi Node订阅链接地址</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-19-free-node-subscribe.htm" title="11月19日→18M/S|2024年最新免费节点Kitsunebi Node订阅链接地址">11月19日→18M/S|2024年最新免费节点Kitsunebi Node订阅链接地址</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">48</span> <a href="/date/2024-12/" title="2024-12 归档">2024-12</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">34</span> <a href="/date/2024-11/" title="2024-11 归档">2024-11</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">31</span> <a href="/date/2024-10/" title="2024-10 归档">2024-10</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">24</span> <a href="/date/2024-09/" title="2024-09 归档">2024-09</a></h4>
            </li>
                    </ul>
    </div>
</div>

                </div>
            </div>
        </div>
    </section>
    <!-- /details page -->
        <footer>
        <div class="container">
            <div class="py-4 text-center">
                <p class="text-light">
                    <a href="/">Kitsunebi Node机场节点订阅官网</a> 版权所有 Powered by WordPress
                </p>
            </div>
        </div>
    </footer>
    <!-- plugins -->
    <script src="/assets/website/js/frontend/kitsunebinode/jQuery/jquery.min.js"></script>
    <script src="/assets/website/js/frontend/kitsunebinode/bootstrap/bootstrap.min.js"></script>
    <script src="/assets/website/js/frontend/kitsunebinode/masonry/masonry.min.js"></script>
    <script src="/assets/website/js/frontend/kitsunebinode/clipboard/clipboard.min.js"></script>
    <script src="/assets/website/js/frontend/kitsunebinode/match-height/jquery.matchHeight-min.js"></script>
    <!-- Main Script -->
    <script src="/assets/website/js/frontend/kitsunebinode/script.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script><script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>